{"version":3,"sources":["lookup/components.js","lookup/lookup.js","tweets/buttons.js","tweets/feed.js","tweets/list.js","tweets/tweet.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["backendLookup","method","url","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","endpoint","responseType","open","onload","status","response","detail","window","location","href","indexOf","setRequestHeader","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","onerror","e","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","apiTweetCreate","newTweet","ActionBtn","tweet","action","setNewTweet","setDidPerformAction","useState","likes","numberOfLikes","setNumberOfLikes","handleClick","event","preventDefault","tweetId","apiTweetAction","id","didPerformAction","alert","onClick","FeedList","tweets","setTweets","setNextUrl","useEffect","results","next","map","index","key","TweetsList","UserPicture","user","style","UserLink","fullName","first_name","last_name","Tweet","parent","match","pathname","tweetIdPath","groups","isDetail","border","marginBottom","content","backgroundColor","TweetsComponent","canTweet","textAreaRef","useRef","createPermission","handleSubmit","useCallback","current","value","onSubmit","ref","cols","rows","type","TweetDetailComponent","props","setTweet","App","Boolean","hostname","rootElement","getElementById","parse","dataset","ReactDOM","render","StrictMode","tweetDetailElements","querySelectorAll","forEach","container","React","createElement","tweetFeedElement","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dcb678e7.chunk.js","sourcesContent":["\n\nconst getCookie = (name) => {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nexport const backendLookup = (method, url, callback, data) => {\n    let jsonData;\n    if (data) {\n        jsonData = JSON.stringify(data)\n    }\n    const xhr = new XMLHttpRequest()\n    const endpoint = `http://127.0.0.1:8000/api/tweets${url}`\n    const responseType = 'json'\n    xhr.responseType = responseType;\n    xhr.open(method, endpoint)\n    xhr.onload = function () {\n        if (xhr.status === 403) {\n            const detail = xhr.response.detail\n            if (detail === 'Authentication credentials were not provided.') {\n                if (window.location.href.indexOf('login') === -1) {\n                    window.location.href = '/login?showLoginRequired=true'\n                }\n            }\n        }\n        callback(xhr.response, xhr.status)\n    }\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    const csrftoken = getCookie('csrftoken')\n    if (csrftoken) {\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n        xhr.setRequestHeader('X-CSRFToken', csrftoken)\n    }\n    xhr.onerror = function (e) {\n        callback({ 'message': 'Какая-то ошибка с запросом' }, 400)\n    }\n    xhr.send(jsonData)\n}\n\n\n","import { backendLookup } from '../lookup'\n\nexport const apiTweetList = (callback,username,nextUrl) => {\n    let endpoint = '/'\n    if (username) {\n        endpoint = `/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace('http://127.0.0.1:8000/api/tweets', '')\n    }\n    backendLookup('GET', endpoint, callback)\n}\n\nexport const apiTweetFeed = (callback, nextUrl) => {\n    let endpoint = '/feed/'\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace('http://127.0.0.1:8000/api/tweets', '/feed/')\n    }\n    backendLookup('GET', endpoint, callback)\n}\n\n\nexport const apiTweetDetail = (callback, tweetId) => {\n    backendLookup('GET', `/${tweetId}`, callback)\n}\n\n\nexport const apiTweetCreate = (newTweet, callback) => {\n    const data = { 'content': newTweet }\n    backendLookup('POST', '/create/', callback, data)\n}\n\nexport const apiTweetAction = (tweetId, action, callback) => {\n    const data = { 'id': tweetId, 'action': action }\n    backendLookup('POST', '/action/', callback, data)\n}","import React, { useState } from 'react';\nimport { apiTweetAction } from '../lookup';\n\nexport const ActionBtn = ({ tweet, action, setNewTweet, setDidPerformAction }) => {\n    const [numberOfLikes, setNumberOfLikes] = useState(tweet.likes)\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action, (response, status) => {\n            if (status === 200) {\n                setNumberOfLikes(response.likes)\n                setDidPerformAction(didPerformAction => !didPerformAction)\n            }\n            else if (status === 201) setNewTweet(response)\n            else alert('Что-то пошло не так. Попробуйте позже')\n        })\n    }\n\n    switch (action) {\n        case 'like':\n            return <button onClick={(event) => handleClick(event)}>{numberOfLikes} / Like</button>\n        case 'unlike':\n            return <button onClick={(event) => handleClick(event)}>{numberOfLikes} / Unlike</button>\n        case 'retweet':\n            return <button onClick={(event) => handleClick(event)}>Retweet</button>\n        default: return null\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { apiTweetFeed } from '../lookup';\nimport { Tweet } from './index';\n\nexport const FeedList = ({ newTweet, setNewTweet }) => {\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    useEffect(() => {\n        const handleData = (response, status) => {\n            if (status === 200) {\n                setTweets(response.results)\n                setNextUrl(response.next)\n            }\n        }\n        apiTweetFeed(handleData)\n    }, [newTweet])\n\n    const handleLoadNext = (event) => {\n        event.preventDefault()\n        // NEED  SOME PRELOADER\n        if (nextUrl !== null) {\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    setTweets(tweets => [...tweets, ...response.results])\n                    setNextUrl(response.next)\n                }\n            }\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\n        }\n    }\n\n    return (\n        <>{tweets.map((tweet, index) => {\n            return <Tweet tweet={tweet} key={index} setNewTweet={setNewTweet} />\n        })}\n            {nextUrl !== null && <button onClick={handleLoadNext}>Показать еще</button>}\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { apiTweetList } from '../lookup';\nimport { Tweet } from './index';\n\nexport const TweetsList = ({ username, newTweet, setNewTweet }) => {\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    useEffect(() => {\n        const handleData = (response, status) => {\n            if (status === 200) {\n                setTweets(response.results)\n                setNextUrl(response.next)\n            }\n            else alert('Что-то пошло не так. Попробуйте позже')\n        }\n        apiTweetList(handleData, username)\n    }, [newTweet, username])\n\n    const handleLoadNext = (event) => {\n        event.preventDefault()\n        // NEED  SOME PRELOADER\n        if (nextUrl !== null) {\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    setTweets(tweets=>[...tweets, ...response.results])\n                    setNextUrl(response.next)\n                }\n                else alert('Что-то пошло не так. Попробуйте позже')\n            }\n            apiTweetList(handleLoadNextResponse, username, nextUrl)\n        }\n    }\n\n    return (\n        <>{tweets.map((tweet, index) => {\n            return <Tweet tweet={tweet} key={index} setNewTweet={setNewTweet} />\n        })}\n            {nextUrl !== null && <button onClick={handleLoadNext}>Показать еще</button>}\n        </>\n    )\n}","import React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\n\nconst UserPicture = ({ user }) => {\n    return (\n        <a href={`/profile/${user.username}`}>\n            <div style={{ 'color': '#fff', 'borderRadius': 20, 'width': 40, 'height': 40, 'backgroundColor': '#000' }}>\n                {user.username[0]}\n            </div>\n        </a>\n    )\n}\n\nconst UserLink = ({ user }) => {\n    const fullName = `${user.first_name} - ${user.last_name}`\n    return (\n        <div style={{ 'color': '#fff', 'borderRadius': 20, 'backgroundColor': '#000' }}>\n            {fullName}\n            <a href={`/profile/${user.username}`}> @{user.username} </a>\n        </div>\n    )\n}\n\n\n\nexport const Tweet = ({ tweet, setNewTweet, parent }) => {\n    const [didPerformAction, setDidPerformAction] = useState(true)\n    var match = window.location.pathname.match(/(?<tweetId>\\d+)/)\n    var tweetIdPath = match ? match.groups.tweetId : null\n    const isDetail = tweetIdPath && tweetIdPath === `${tweet.id}` ? true : false\n\n    return (\n        <>\n            <div style={{ border: '1px solid black', marginBottom: 20 }}>\n                <UserPicture user={tweet.user} />\n                <UserLink user={tweet.user} />\n                {tweet.content}\n                {parent\n                    ? null\n                    : <>\n                        {didPerformAction\n                            ? <ActionBtn setDidPerformAction={setDidPerformAction} tweet={tweet} action='like' />\n                            : <ActionBtn setDidPerformAction={setDidPerformAction} tweet={tweet} action='unlike' />}\n                        <ActionBtn tweet={tweet} setNewTweet={setNewTweet} action='retweet' />\n                    </>}\n                {isDetail ? null : <a href={`/${tweet.id}`}>Подробнее</a>}\n                {tweet.parent && <div style={{ backgroundColor: '#44ffa2' }}><Tweet tweet={tweet.parent} parent={tweet.parent} setNewTweet={setNewTweet} /></div>}\n            </div>\n        </>\n    )\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { apiTweetCreate, apiTweetDetail } from '../lookup';\nimport { FeedList } from './feed';\nimport { TweetsList } from './list';\nimport { Tweet } from './tweet';\n\nexport const FeedComponent = ({ username, canTweet }) => {\n    const textAreaRef = useRef()\n    const createPermission = canTweet === 'false' ? false : true\n    const [newTweet, setNewTweet] = useState([])\n    const handleSubmit = useCallback((event) => {\n        event.preventDefault()\n        apiTweetCreate(textAreaRef.current.value, (response, status) => {\n            (status === 201\n                ? setNewTweet(response)\n                : alert('Произошла ошибка. Попробуйте еще раз')\n            )\n        })\n        textAreaRef.current.value = ''\n    }, [])\n    return (\n        <>\n            {createPermission && <form onSubmit={handleSubmit}>\n                <textarea ref={textAreaRef} name=\"content\" id=\"content\" cols=\"30\" rows=\"10\"></textarea>\n                <button type=\"submit\">Добавить</button>\n            </form>}\n            <FeedList newTweet={newTweet} setNewTweet={setNewTweet} />\n        </>\n    )\n}\n\n\n\n\nexport const TweetsComponent = ({ username, canTweet }) => {\n    const textAreaRef = useRef()\n    const createPermission = canTweet === 'false' ? false : true\n    const [newTweet, setNewTweet] = useState([])\n    const handleSubmit = useCallback((event) => {\n        event.preventDefault()\n        apiTweetCreate(textAreaRef.current.value, (response, status) => {\n            (status === 201\n                ? setNewTweet(response)\n                : alert('Произошла ошибка. Попробуйте еще раз')\n            )\n        })\n        textAreaRef.current.value = ''\n    }, [])\n    return (\n        <>\n            {createPermission && <form onSubmit={handleSubmit}>\n                <textarea ref={textAreaRef} name=\"content\" id=\"content\" cols=\"30\" rows=\"10\"></textarea>\n                <button type=\"submit\">Добавить</button>\n            </form>}\n            <TweetsList username={username} newTweet={newTweet} setNewTweet={setNewTweet} />\n        </>\n    )\n}\n\nexport const TweetDetailComponent = (props) => {\n    const [tweet, setTweet] = useState(null)\n    useEffect(() => {\n        apiTweetDetail((response, status) => {\n            if (status === 200) {\n                setTweet(response)\n            } else {\n                alert('Какая-то ошибка с поиском вашего твита')\n            }\n        }, props.tweetId)\n    }, [])\n    return tweet === null ? null : <Tweet tweet={tweet} />\n}","import React from 'react';\nimport { TweetsComponent } from './tweets';\n\n\nconst App = ({data}) => {\n  return (\n    <>\n      <TweetsComponent username={data.username} canTweet={data.canTweet}/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { FeedComponent, TweetDetailComponent } from './tweets';\n\n\nconst rootElement = document.getElementById('tweetme')\n\nif (rootElement) {\n  const data = JSON.parse(JSON.stringify(rootElement.dataset))\n  ReactDOM.render(\n    <React.StrictMode>\n      <BrowserRouter>\n        <App data={data} />\n      </BrowserRouter>\n    </React.StrictMode>,\n    rootElement\n  );\n}\n\n\nconst tweetDetailElements = document.querySelectorAll('.tweetme-detail')\nif (tweetDetailElements) {\n  tweetDetailElements.forEach(container => {\n    ReactDOM.render(\n      React.createElement(TweetDetailComponent, container.dataset),\n      container)\n  })\n}\n\nconst tweetFeedElement = document.getElementById('tweetme-feed')\nif (tweetFeedElement) {\n  ReactDOM.render(\n    React.createElement(FeedComponent, tweetFeedElement.dataset),\n    tweetFeedElement)\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}